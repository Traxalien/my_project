pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                bat 'java -version'
            }
        }
        stage('Test') {
            steps {
                echo 'Testing...'
                bat 'echo "Simulating tests"'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying...'
            }
        }
    }
}




echo print('Hello from python')>Hello.py
py Hello.py


echo public class Hello{public static void main(String[] args ){System.out.println("HEllo from java");}}>Hello.java
javac Hello.java
java Hello



exp1 git 

git init
echo "Hello from Shridhar" >demo.txt
git status
git add demo.txt
git status
git commit -m "Initial commit by Shridhar"
git remote add origin https://github.com/Traxalien/legendary-goggles.git
git branch -M main
git push -u origin main



exp2 git 
git init
echo "Main branch file by Shridhar" > main.txt
git add .
git commit -m "main branch initial commit by Shridhar"
git branch feature
git checkout feature
echo "feature branch changes by Shridhar" > feature.txt
git add .
git commit -m "Added feature file by Shridhar"
git checkout master
git merge feature
ls


exp 3 git 

git clone https://github.com/Traxalien/legendary-goggles.git
 cd legendary-goggles
 echo "This is Shridhar's remote demo" > remote.txt
git add .
 git commit -m "Added remote demo files by Shridhar"
 git push origin main
git pull origin main
ls
cat remote.txt











# 1. Download (pull) an image from Docker Hub
docker pull nginx:latest

# 2. See all images on your machine
docker images
# OR: docker image ls

# 3. Run an image to create a container (just to test)
docker run -d -p 80:80 --name my-web-server nginx:latest

# 4. Stop and remove the container
docker stop my-web-server
docker rm my-web-server

# 5. Remove (delete) the image from your machine
docker rmi nginx:latest

# 6. Check images again to see it's gone
docker images



